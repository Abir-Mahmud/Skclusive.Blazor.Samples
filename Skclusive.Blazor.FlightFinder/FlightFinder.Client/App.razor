@inherits DisposableComponentBase

<ReduxToolScript />
<div id="search-and-results-area">
    <div id="search-area" class="px-2 py-3">
        <Search />
    </div>
    <div id="results-area">
        <Observable>
            <GreyOutZone IsGreyedOut=AppState.SearchInProgress>
                <SearchResults />
            </GreyOutZone>
        </Observable>
    </div>
</div>
<div id="selections-area" class="p-3 pl-4">
    <Shortlist />
</div>

@code
{
    [Inject]
    public IAppState AppState { set; get; }

    [Inject]
    public IAppService AppService { set; get; }

    [Inject]
    public IStateTreeTool<AppStateSnapshot> StateTreeTool { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        System.Console.WriteLine("App.OnInitializedAsync");

        RunTimeout(() =>
        {
            _ = StateTreeTool.ConnectAsync(AppState);

            RunTimeout(() =>
            {
                _ = AppService.LoadAirportsAsync();
            }, 100);
        }, 100);
    }

    protected override void Dispose()
    {
        base.Dispose();

        StateTreeTool?.Dispose();
    }
}
